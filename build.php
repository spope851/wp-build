<?php
/**
 * WordPress Build Script
 * 
 * This script rebuilds the entire WordPress installation from Composer dependencies.
 * Run this after cloning the repository or when you need a fresh WordPress install.
 */

echo "=== WordPress Build Script ===\n\n";

// Step 1: Clean up existing installation
echo "1. Cleaning up existing WordPress installation...\n";
if (is_dir('wordpress')) {
    echo "   Removing existing wordpress/ directory...\n";
    system('rm -rf wordpress');
}

if (is_dir('wp-content')) {
    echo "   Removing existing wp-content/ directory...\n";
    system('rm -rf wp-content');
}

if (is_dir('vendor')) {
    echo "   Removing existing vendor/ directory...\n";
    system('rm -rf vendor');
}

if (file_exists('composer.lock')) {
    echo "   Removing composer.lock...\n";
    unlink('composer.lock');
}

// Step 2: Install Composer dependencies
echo "\n2. Installing Composer dependencies...\n";
$composer_output = [];
$composer_return = 0;
exec('composer install', $composer_output, $composer_return);

if ($composer_return !== 0) {
    echo "   ✗ Composer install failed!\n";
    echo "   Output: " . implode("\n", $composer_output) . "\n";
    exit(1);
}

echo "   ✓ Composer dependencies installed successfully\n";

// Step 3: Set up WordPress directory structure
echo "\n3. Setting up WordPress directory structure...\n";
if (!is_dir('wordpress')) {
    echo "   ✗ wordpress/ directory not created by Composer\n";
    exit(1);
}

// Move wp-content into the wordpress directory
if (is_dir('wp-content')) {
    system('mv wp-content wordpress/');
    echo "   ✓ Moved wp-content into wordpress/ directory\n";
}

echo "   ✓ WordPress files are in wordpress/ directory\n";

// Step 4: Create necessary directories
echo "\n4. Creating necessary directories...\n";
$directories = [
    'wordpress/wp-content/uploads',
    'wordpress/wp-content/cache',
    'wordpress/wp-content/mu-plugins',
    'wordpress/wp-content/themes'
];

foreach ($directories as $dir) {
    if (!is_dir($dir)) {
        mkdir($dir, 0755, true);
        echo "   ✓ Created $dir\n";
    } else {
        echo "   ✓ $dir already exists\n";
    }
}

// Step 5: Set permissions
echo "\n5. Setting file permissions...\n";
system('chmod -R 755 wordpress/');
echo "   ✓ File permissions set\n";

// Step 6: Verify installation
echo "\n6. Verifying installation...\n";
$required_files = [
    'wordpress/index.php',
    'wordpress/wp-content/plugins/woocommerce',
    'wordpress/wp-content/plugins/contact-form-7',
    'wordpress/wp-content/plugins/wordpress-seo'
];

$all_good = true;
foreach ($required_files as $file) {
    if (file_exists($file)) {
        echo "   ✓ $file exists\n";
    } else {
        echo "   ✗ $file missing\n";
        $all_good = false;
    }
}

if ($all_good) {
    echo "\n=== Build Complete! ===\n";
    echo "Your WordPress installation has been rebuilt successfully.\n";
    echo "Note: wp-config.php is not generated by this build script.\n";
    echo "The environment should handle WordPress configuration.\n";
    echo "You can now start the development server:\n";
    echo "  php -S localhost:8000 -t wordpress/\n";
} else {
    echo "\n=== Build Failed! ===\n";
    echo "Some required files are missing. Please check the errors above.\n";
    exit(1);
} 